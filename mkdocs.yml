site_name: Nim docs

theme:
  name: material
#  highlightjs: true
# https://github.com/narimiran/nim-basics
nav:
  - About: about.md
  - Learn:
    - Introduction: learn/intro.md
    - Learn Nim in x minutes: learn/overview/learn_nim_in_5_minutes.md
    - Nim by example:
      - Getting Started: learn/nim_by_example/getting_started.md
      - Hello world: learn/nim_by_example/hello_world.md
      - Comments: learn/nim_by_example/comments.md
      - Variables: learn/nim_by_example/variables.md
      - Result: learn/nim_by_example/result.md
      - Type Casting and Inference: learn/nim_by_example/type_casting_inference.md
      - If, else and while: learn/nim_by_example/if_else_while.md
      - Case Statements: learn/nim_by_example/case.md
      - For Loops & Iterators: learn/nim_by_example/for_loops_iterators.md
      - Procs: learn/nim_by_example/procs.md
      - First class functions: learn/nim_by_example/first_class_functions.md
      - Blocks: learn/nim_by_example/blocks.md
      - Primitive types: learn/nim_by_example/primitives.md
      - Type aliases: learn/nim_by_example/types.md
      - Object types: learn/nim_by_example/object_types.md
      - Enum types: learn/nim_by_example/enum_types.md
      - Distinct types: learn/nim_by_example/distinct_types.md
      - Strings: learn/nim_by_example/strings.md
      - Arrays: learn/nim_by_example/arrays.md
      - Seqs: learn/nim_by_example/seqs.md
      - Bitsets: learn/nim_by_example/bitsets.md
      - Files: learn/nim_by_example/files.md
      - JSON: learn/nim_by_example/json.md
      - Varargs: learn/nim_by_example/varargs.md
      - String Formatting: learn/nim_by_example/string_formatting.md
      - Object Oriented Programming: learn/nim_by_example/oop.md
      - Parallelism: learn/nim_by_example/parallelism.md
      - Channels: learn/nim_by_example/channels.md
      - Concurrency: learn/nim_by_example/concurrency.md
      - Macros: learn/nim_by_example/macros.md

  - How-to:
    - Index: howto/index.md

  - Reference:
    - Authors: manual/author.md

    - Lexis:
      - About: manual/lexis/about.md
      - Definitions: manual/lexis/definitions.md
      - Lexical Analysis: manual/lexis/lexical_analysis.md
      - Syntax: manual/lexis/syntax.md
      - Order of evaluation: manual/lexis/evaluation_order.md
      - Constants and Contants Expressions: manual/lexis/constants.md
      - Restrictions on Compile-Time Execution: manual/lexis/restrictions_compile_time_execution.md

    - Types: manual/types.md
    - Type Relations: manual/type_relations.md
    - Overload Resolution: manual/overload_resolution.md
    - Overload Disambiguation: manual/overload_disambiguation.md
    - Statements Expressions: manual/statements_expressions.md
    - Procedures: manual/procedures.md
    - Methods: manual/methods.md
    - Iterators and the for statement: manual/iterators_for.md
    - Converters: manual/converters.md
    - Type sections: manual/type_sections.md
    - Exception Handling: manual/exception_handling.md
    - Effect System: manual/effect_system.md
    - Generics: manual/generics.md
    - Templates: manual/templates.md
    - Macros: manual/macros.md
    - Special Types: manual/special_types.md
    - Modules: manual/modules.md
    - Compiler Messages: manual/compiler_messages.md
    - Pragmas:
      - Pragmas: 
        - Introduction: manual/pragmas/pragmas/pragmas.md
        - depricated: manual/pragmas/pragmas/pragma_depricated.md
        - compileTime: manual/pragmas/pragmas/pragma_compiletime.md 
        - noReturn: manual/pragmas/pragmas/pragma_noreturn.md 
        - acyclic: manual/pragmas/pragmas/pragma_acyclic.md          
        - shallow: manual/pragmas/pragmas/pragma_shallow.md  
        - pure: manual/pragmas/pragmas/pragma_fatal.md         
        - asmNoStackFrame: manual/pragmas/pragmas/pragma_pure.md 
        - fatal: manual/pragmas/pragmas/pragma_fatal.md 
        - warning: manual/pragmas/pragmas/pragma_warning.md 
        - hint: manual/pragmas/pragmas/pragma_hint.md         
        - line: manual/pragmas/pragmas/pragma_line.md         
        - linearScanEnd: manual/pragmas/pragmas/pragma_linearscanend.md  
        - computedGoto: manual/pragmas/pragmas/pragma_computedgoto.md 
        - immediate: manual/pragmas/pragmas/pragma_immediate.md 
        - compilation option: manual/pragmas/pragmas/pragma_compilation_option.md 
        - push / pop: manual/pragmas/pragmas/pragma_push_pop.md 
        - register: manual/pragmas/pragmas/pragma_register.md          
        - global: manual/pragmas/pragmas/pragma_global.md        
        - used: manual/pragmas/pragmas/pragma_used.md
        - experimental: manual/pragmas/pragmas/pragma_experimental.md

      - Implementation Specific Pragmas: manual/pragmas/specific_pragmas.md
      - User-defined pragmas: manual/pragmas/user_defined_pragmas.md
      - Foreign Function Interface: 
        - FFI: manual/pragmas/ffi/ffi.md
        - importc: manual/pragmas/ffi/pragma_importc.md
        - exportc: manual/pragmas/ffi/pragma_exportc.md
        - extern: manual/pragmas/ffi/pragma_extern.md
        - bycopy: manual/pragmas/ffi/pragma_bycopy.md
        - byref: manual/pragmas/ffi/pragma_byref.md
        - varargs: manual/pragmas/ffi/pragma_varargs.md
        - union: manual/pragmas/ffi/pragma_union.md
        - packed: manual/pragmas/ffi/pragma_packed.md
        - dynlib:
          - dynlib for import: manual/pragmas/ffi/pragma_dynlib_import.md
          - dynlib for export: manual/pragmas/ffi/pragma_dynlib_export.md 

      - Threads: 
        - Introduction: manual/pragmas/threads/threads.md
        - thread: manual/pragmas/threads/pragma_thread.md
        - threadvar: manual/pragmas/threads/pragma_threadvar.md

  - Explanation:
    - Index: explanation/index.md

markdown_extensions:
- admonition
- codehilite
- pymdownx.details
- pymdownx.superfences
- tables
- pymdownx.arithmatex:
    generic: true

extra_javascript:
  - javascripts/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js

plugins:
- search